@c_circle_background: #17208d;

@hexagon_width: 250px;

// a = length of one side
// a = w/2 * cos 30
@hex_a: @hexagon_width / (2 * 0.86602540378px);

// tent height = height of p1 from horizontal line p2-p6
// tent height = a * cos 60
@hex_tent_height: @hex_a * 0.5;

@hexagon_height: @hex_a + 2 * @hex_tent_height;

@hexagon_side_offset: (@bulb_width - @hexagon_width) / 2;
@hexagon_top_offset: 95px;

// utilities used for position calculation
@hex_half_w: @hexagon_width / 2;
@hex_half_h: @hexagon_height / 2;

@circle_radius: 40px;
@circle_diameter: @circle_radius * 2;

// line animation and fade speed for hex
@hex_line_speed: 700ms; 

// Hexagon container
.hexagon {
    // background: red;
    width: @hexagon_width;
    height: @hexagon_height;

    position: absolute;
    top: @hexagon_top_offset;
    left: @hexagon_side_offset;
    right: @hexagon_side_offset;
}

// individual circles, numbered 1-6 clockwise
.circle {
    width: @circle_diameter;
    height: @circle_diameter;
    border-radius: @circle_radius;
    position: absolute;
    cursor: pointer;

    border: 1px solid rgba(118, 182, 252, 0.9);

    background: @c_circle_background;

    img {
        width: 50px;
        height: 50px;
        margin-top: (@circle_diameter - 50px) / 2 - 2px;
        margin-left: (@circle_diameter - 50px) / 2 - 2px;
    }

    .cover {
        width: @circle_diameter - 4px;
        height: @circle_diameter - 4px;
        border-radius: @circle_radius;
        position: absolute;
        top: 0;
        left: 0;

        background: rgba(0, 20, 170, 0.15);
    }

    &:hover .cover {
        background: none;
    }

    &:hover {
        transform: scale(1.1, 1.1);
        transition: all 125ms ease-out;
        border: 2px solid #98D1FD;
        box-shadow: 0px 0px 60px 2px rgba(95, 236, 255, 0.26);
        background: #0099FF;
    }
}

.circle.c1 {
    left: @hex_half_w - @circle_radius;
    top: -@circle_radius;
}

.circle.c2 {
    right: -@circle_radius;
    top: @hex_tent_height - @circle_radius;
}

.circle.c3 {
    right: -@circle_radius;
    bottom: @hex_tent_height - @circle_radius;
}

.circle.c4 {
    bottom: -@circle_radius;
    left: @hex_half_w - @circle_radius;
}

.circle.c5 {
    left: -@circle_radius;
    bottom: @hex_tent_height - @circle_radius;
}

.circle.c6 {
    left: -@circle_radius;
    top: @hex_tent_height - @circle_radius;
}

// individual lines, numbered 1-6 clockwise
.line {
    width: @hex_a;
    height: 1px;
    position: absolute;
    top: 0;
    left: 0;
    background: @dark_blue;
}

.inner-line {
    border: 1px solid #98D1FD;
    width: 0;
    box-shadow: 0px 0px 60px 2px rgba(95, 236, 255, 0.26);
    background: #0099FF;
    transition: all @hex_line_speed ease-out;
}

.hex-loaded .inner-line {
    width: 100%;
}

.line.l1 {
    left: @hexagon_width;
    top: @hex_tent_height;
    transform: rotate(-150deg);
    transform-origin: left center;

    .inner-line {
        transition-delay: 2 * @hex_line_speed ;   
    }
}

.line.l2 {
    left: @hexagon_width;
    top: @hex_a + @hex_tent_height;
    transform: rotate(-90deg);
    transform-origin: left;

    .inner-line {
        transition-delay: @hex_line_speed;   
    }
}

.line.l3 {
    left: @hex_half_w;
    top: @hexagon_height;
    transform: rotate(-30deg);
    transform-origin: left;
    
    .inner-line {
        transition-delay: 0;   
    }
}

.line.l4 {
    left: @hex_half_w;
    top: @hexagon_height;
    transform: rotate(-150deg);
    transform-origin: left;
    
    .inner-line {
        transition-delay: 0;   
    }
}

.line.l5 {
    left: 0;
    top: @hex_a + @hex_tent_height ;
    transform: rotate(-90deg);
    transform-origin: left;
    
    .inner-line {
        transition-delay: @hex_line_speed;   
    }
}

.line.l6 {
    left: 0;
    top: @hex_tent_height;
    transform: rotate(-30deg);
    transform-origin: left;
    
    .inner-line {
        transition-delay: 2 * @hex_line_speed;   
    }
}

//svg 
.path {
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  -webkit-animation: dash 10s infinite;
  animation: dash 5s linear alternate infinite;
}

@-webkit-keyframes dash {
  from {
    stroke-dashoffset: 1000;
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes dash {
  from {
    stroke-dashoffset: 1000;
  }
  to {
    stroke-dashoffset: 0;
  }
}
